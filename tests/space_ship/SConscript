from sys import platform
progname = 'SpaceShip';

IncludePath = ['../../src/','../../src/include']
LibsPath = ['../../']   
Libs = ['Distillate']

CommonFlags = ' -Wall -pedantic'

debug    = ARGUMENTS.get('debug', 'true')
linkage  = ARGUMENTS.get('linkage', 'static')

render   = ARGUMENTS.get('render', 'sdl')
input    = ARGUMENTS.get('input', '')

progenv = Environment( CPPFLAGS = CommonFlags)

if debug == 'true':
    progenv.Append(CPPFLAGS = ' -g -ggdb')
    progenv.Append(CPPDEFINES = ['DEBUG'])

if render == 'sdl':
    progenv.Append(CPPDEFINES = ['SDL_RENDER'])
    Libs.append('SDL')
    Libs.append('SDL_image')
    Libs.append('SDL_ttf')
    Libs.append('SDL_gfx')
    Libs.append('SDL_mixer')

elif render == 'gl':
    progenv.Append(CPPDEFINES = ['GL_RENDER'])
    Libs.append('GL')
    Libs.append('GLU')
    if platform == 'linux2':
        Libs.append('X11')
        Libs.append('Xxf86vm')
        Libs.append('png')

if input == 'sdl':
    progenv.Append(CPPDEFINES = ['SDL_INPUT'])
    Libs.append('SDL')

files = Split("""
main.cpp
""")

progenv.Program(target = progname, source = files, CPPPATH = IncludePath, LIBS = Libs, LIBPATH = LibsPath)

