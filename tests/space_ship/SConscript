from sys import platform
progname = 'SpaceShip';

IncludePath = ['../../src/','../../src/include']
LibsPath = ['../../']   
Libs = ['Distillate']

CommonFlags = ' -Wall -pedantic'

debug    = ARGUMENTS.get('debug', 'true')
linkage  = ARGUMENTS.get('linkage', 'static')

video    = ARGUMENTS.get('video',  'sdl')
render   = ARGUMENTS.get('render', 'hw')

progenv = Environment( CPPFLAGS = CommonFlags)

if debug == 'true':
    progenv.Append(CPPFLAGS = ' -g -ggdb')
    progenv.Append(CPPDEFINES = ['DEBUG'])

if video == 'sdl':
    progenv.Append(CPPDEFINES = ['SDL_VIDEO'])
    Libs.append('SDL')
    Libs.append('SDL_image')
    Libs.append('SDL_ttf')
    Libs.append('SDL_gfx')
    Libs.append('SDL_mixer')
    if render == 'hw':
        progenv.Append(CPPDEFINES = ['HW_RENDER'])
        Libs.append('GL')
        Libs.append('GLU')
    if render == 'sw':
        progenv.Append(CPPDEFINES = ['SW_RENDER'])

if video == 'x11':
    if render == 'hw':
        progenv.Append(CPPDEFINES = ['X11_VIDEO'])
        Libs.append('GL')
        Libs.append('GLU')
        if platform == 'linux2':
            Libs.append('X11')
            Libs.append('Xxf86vm')
            Libs.append('png')
            LibsPath.append('/usr/lib/X11')
    elif render == 'sw':
        print "SW RENDER DISABLE FOR X11"
        Exit(-1)

files = Split("""
main.cpp
""")

progenv.Program(target = progname, source = files, CPPPATH = IncludePath, LIBS = Libs, LIBPATH = LibsPath)

