from sys import platform

libname = 'Distillate';

IncludePath = ['include/']
LibsPath = []   
Libs = []

CommonFlags = ' -Wall -pedantic'

debug    = ARGUMENTS.get('debug', 'true')
linkage  = ARGUMENTS.get('linkage', 'static')

engine   = ARGUMENTS.get('engine', 'sdl')

libenv = Environment( CPPFLAGS = CommonFlags)

if debug == 'true':
    libenv.Append(CPPFLAGS = ' -g -ggdb')
    libenv.Append(CPPDEFINES = ['DEBUG'])

if engine == 'sdl':
    libenv.Append(CPPDEFINES = ['SDL_ENGINE'])
    Libs.append('SDL')
    Libs.append('SDL_image')
    Libs.append('SDL_ttf')
    Libs.append('SDL_gfx')
    Libs.append('SDL_mixer')

elif engine == 'gl':
    libenv.Append(CPPDEFINES = ['GL_ENGINE'])
    Libs.append('GL')
    Libs.append('GLU')
    if platform == 'linux2':
        Libs.append('X11')
        Libs.append('Xxf86vm')
        Libs.append('png')
        LibsPath.append('/usr/lib/X11')

files = Split("""
Emitter.cpp
Game.cpp
Globals.cpp
Group.cpp
Keyboard.cpp
Mouse.cpp
Object.cpp
QuadTree.cpp
ResourceManager.cpp
Sound.cpp
SoundResource.cpp
Sprite.cpp
State.cpp
Text.cpp
TextureResource.cpp
TTFResource.cpp
Utils.cpp
""");

if linkage == 'static':
    lib = libenv.StaticLibrary(target = "../%s" % libname, source = files, CPPPATH = IncludePath, LIBS = Libs, LIBPATH = LibsPath)
elif linkage == 'shared':
    lib = libenv.SharedLibrary(target = "../%s" % libname, source = files, CPPPATH = IncludePath, LIBS = Libs, LIBPATH = LibsPath)

